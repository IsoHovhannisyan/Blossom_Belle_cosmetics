// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                         String                @id @default(auto()) @map("_id") @db.ObjectId
  email                      String
  password                   String
  name                       String
  createdAuth                Author[]
  createdNavbar              Navbar[]
  createdHomepagelabel       Homepagelabel[]
  createdSlider              Slider[]
  createdMakeup              Makeup[]
  createdSkincare            Skincare[]
  createdHair                Hair[]
  createdBrush               Brush[]
  createdProductpagelabel    Productpagelabel[]
  createdBasketpagelabel     Basketpagelabel[]
  createdCollectionimages    Collectionimages[]
  createdFooter              Footer[]
}

model Author {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  lang        String
  login       String
  register    String
  votes       String?
  user        User   @relation(fields: [authorId], references: [id])
  authorId    String @db.ObjectId
}

model Navbar {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  lang        String
  log         String
  navbar      String
  categories  String
  delivery    String?
  sale        String?
  user        User   @relation(fields: [authorId], references: [id])
  authorId    String @db.ObjectId
}

model Homepagelabel {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  lang     String
  label    String
  user     User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId
}

model Slider {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  lang     String
  image    String
  user     User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId
}

model Makeup {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  category    String
  lang        String
  title       String
  descr       String
  image       String
  btn_text    String
  price       String
  quantity    Int?
  path        String?
  new         String?
  best_seller String?
  sale        Int?
  user        User   @relation(fields: [authorId], references: [id])
  authorId    String @db.ObjectId
}


model Skincare {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  category    String
  lang        String
  title       String
  descr       String
  image       String
  btn_text    String
  price       String
  quantity    Int?
  path        String?
  new         String?
  best_seller String?
  sale        Int?
  user        User   @relation(fields: [authorId], references: [id])
  authorId    String @db.ObjectId
}

model Hair {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  category    String
  lang        String
  title       String
  descr       String
  image       String
  btn_text    String
  price       String
  quantity    Int?
  path        String?
  new         String?
  best_seller String?
  sale        Int?
  user        User   @relation(fields: [authorId], references: [id])
  authorId    String @db.ObjectId
}

model Brush {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  category    String
  lang        String
  title       String
  descr       String
  image       String
  btn_text    String
  price       String
  quantity    Int?
  path        String?
  new         String?
  best_seller String?
  sale        Int?
  user        User   @relation(fields: [authorId], references: [id])
  authorId    String @db.ObjectId
}

model Productpagelabel {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  lang              String
  btn_text          String
  basket_text       String
  detail_text       String
  delivery_text     String
  delivery          String?
  note              String?
  product_qty_text  String?
  user     User     @relation(fields: [authorId], references: [id])
  authorId String   @db.ObjectId
}

model Basketpagelabel {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  lang          String
  title         String
  btn_text      String
  empty_text    String
  total         String
  basket_clear  String
  checkout      String
  mybasket      String?
  data          String?
  confirmation  String?
  continueshop  String?  
  checkout_data String?
  user     User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId
}

model Collectionimages {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  folder     String
  image_name String
  user       User   @relation(fields: [authorId], references: [id])
  authorId   String @db.ObjectId
}

model Footer {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  lang     String
  heading  String
  links    String
  info     String
  user     User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId
}
